; Listing generated by Microsoft (R) Optimizing Compiler Version 19.26.28806.0 

	TITLE	c:\users\neonik\desktop\csgo cheat sources\otc-source\otc\cpp\utils\panicutils.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_03MLMOILGK@Msg@				; `string'
PUBLIC	??_C@_09LGKBAKDK@tier0?4dll@			; `string'
PUBLIC	??_C@_0BA@OBHPCBFP@CreateInterface@		; `string'
PUBLIC	??_C@_0L@EMPDFJNI@engine?4dll@			; `string'
PUBLIC	??_C@_0BB@CJDLPJJP@VEngineClient014@		; `string'
PUBLIC	??_C@_0EE@KHFJPLEA@?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?5@ ; `string'
PUBLIC	??_C@_0FO@HCNJJPPM@Send?5this?5log?5to?5the?5developer?5@ ; `string'
PUBLIC	??_C@_0DM@GOADBMDA@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@ ; `string'
PUBLIC	??_C@_02MDDDDAID@0x@				; `string'
PUBLIC	??_C@_0BH@JGFIANLP@?$FLSEGMENT?$FN?5Allocation?3?5@ ; `string'
PUBLIC	??_C@_0BD@EMEBIIFP@?$FLSEGMENT?$FN?5Module?3?5@	; `string'
PUBLIC	??_C@_0BD@IPMJGJLJ@Global?5variables?3?5@	; `string'
PUBLIC	??_C@_0BN@PNBNEKLM@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@ ; `string'
PUBLIC	??_C@_01LFCBOECM@?4@				; `string'
PUBLIC	??_C@_08IIKACINI@Caused?3?5@			; `string'
PUBLIC	??_C@_07MJJPDIKC@Layer?3?5@			; `string'
PUBLIC	??_C@_0BM@KFAEANNI@?9?9?9?9?9?9?9?9?9?9?9?5INFO?5?9?9?9?9?9?9?9?9?9?9@ ; `string'
PUBLIC	??_C@_0EF@OFOAANJP@After?5information?5about?5the?5cau@ ; `string'
PUBLIC	??_C@_0EF@ICLOMLHH@If?5you?5see?5this?5message?3?5OTC?5ca@ ; `string'
PUBLIC	??_C@_06MNPNKHCO@_Panic@			; `string'
PUBLIC	??_C@_0BM@DKGLMJLA@Log?5may?5at?5document?5folder?4@ ; `string'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
EXTRN	__imp_?setf@ios_base@std@@QAEHH@Z:PROC
EXTRN	__imp_?setf@ios_base@std@@QAEHHH@Z:PROC
EXTRN	__imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z:PROC
EXTRN	__imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z:PROC
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__ExitThread@4:PROC
EXTRN	__imp__FreeLibraryAndExitThread@8:PROC
EXTRN	__imp__VirtualFree@12:PROC
;	COMDAT ??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0aH
	DD	FLAT:??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	068H
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	068H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	03H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	058H
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$alloc'
	DB	'ator@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	09H
	DD	FLAT:??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BM@DKGLMJLA@Log?5may?5at?5document?5folder?4@
CONST	SEGMENT
??_C@_0BM@DKGLMJLA@Log?5may?5at?5document?5folder?4@ DB 'Log may at docum'
	DB	'ent folder.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06MNPNKHCO@_Panic@
CONST	SEGMENT
??_C@_06MNPNKHCO@_Panic@ DB '_Panic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@ICLOMLHH@If?5you?5see?5this?5message?3?5OTC?5ca@
CONST	SEGMENT
??_C@_0EF@ICLOMLHH@If?5you?5see?5this?5message?3?5OTC?5ca@ DB 'If you see'
	DB	' this message: OTC cannot find a way out of the situation.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@OFOAANJP@After?5information?5about?5the?5cau@
CONST	SEGMENT
??_C@_0EF@OFOAANJP@After?5information?5about?5the?5cau@ DB 'After informa'
	DB	'tion about the cause of the error, CSGO will be frozen.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KFAEANNI@?9?9?9?9?9?9?9?9?9?9?9?5INFO?5?9?9?9?9?9?9?9?9?9?9@
CONST	SEGMENT
??_C@_0BM@KFAEANNI@?9?9?9?9?9?9?9?9?9?9?9?5INFO?5?9?9?9?9?9?9?9?9?9?9@ DB '-'
	DB	'---------- INFO ----------', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MJJPDIKC@Layer?3?5@
CONST	SEGMENT
??_C@_07MJJPDIKC@Layer?3?5@ DB 'Layer: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IIKACINI@Caused?3?5@
CONST	SEGMENT
??_C@_08IIKACINI@Caused?3?5@ DB 'Caused: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4@
CONST	SEGMENT
??_C@_01LFCBOECM@?4@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PNBNEKLM@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
CONST	SEGMENT
??_C@_0BN@PNBNEKLM@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@ DB '-'
	DB	'---------------------------', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IPMJGJLJ@Global?5variables?3?5@
CONST	SEGMENT
??_C@_0BD@IPMJGJLJ@Global?5variables?3?5@ DB 'Global variables: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EMEBIIFP@?$FLSEGMENT?$FN?5Module?3?5@
CONST	SEGMENT
??_C@_0BD@EMEBIIFP@?$FLSEGMENT?$FN?5Module?3?5@ DB '[SEGMENT] Module: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JGFIANLP@?$FLSEGMENT?$FN?5Allocation?3?5@
CONST	SEGMENT
??_C@_0BH@JGFIANLP@?$FLSEGMENT?$FN?5Allocation?3?5@ DB '[SEGMENT] Allocat'
	DB	'ion: ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_02MDDDDAID@0x@
CONST	SEGMENT
??_C@_02MDDDDAID@0x@ DB '0x', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@GOADBMDA@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
CONST	SEGMENT
??_C@_0DM@GOADBMDA@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@ DB '-'
	DB	'----------------------------------------------------------', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FO@HCNJJPPM@Send?5this?5log?5to?5the?5developer?5@
CONST	SEGMENT
??_C@_0FO@HCNJJPPM@Send?5this?5log?5to?5the?5developer?5@ DB 'Send this l'
	DB	'og to the developer or try connecting a debugger and find out'
	DB	' what the problem is.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@KHFJPLEA@?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?5@
CONST	SEGMENT
??_C@_0EE@KHFJPLEA@?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?5@ DB '!'
	DB	'!!!!!!!!!!!!!!!!!!!!!!!!!!!!! PANIC !!!!!!!!!!!!!!!!!!!!!!!!!'
	DB	'!!!!!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CJDLPJJP@VEngineClient014@
CONST	SEGMENT
??_C@_0BB@CJDLPJJP@VEngineClient014@ DB 'VEngineClient014', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EMPDFJNI@engine?4dll@
CONST	SEGMENT
??_C@_0L@EMPDFJNI@engine?4dll@ DB 'engine.dll', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OBHPCBFP@CreateInterface@
CONST	SEGMENT
??_C@_0BA@OBHPCBFP@CreateInterface@ DB 'CreateInterface', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LGKBAKDK@tier0?4dll@
CONST	SEGMENT
??_C@_09LGKBAKDK@tier0?4dll@ DB 'tier0.dll', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03MLMOILGK@Msg@
CONST	SEGMENT
??_C@_03MLMOILGK@Msg@ DB 'Msg', 00H			; `string'
PUBLIC	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2
PUBLIC	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	?__autoclassinit2@Logger@@QAEXI@Z		; Logger::__autoclassinit2
PUBLIC	??0GameFramework@@QAE@XZ			; GameFramework::GameFramework
PUBLIC	??0Logger@@QAE@W4LoggerType@0@@Z		; Logger::Logger
PUBLIC	?uppercase@std@@YAAAVios_base@1@AAV21@@Z	; std::uppercase
PUBLIC	?hex@std@@YAAAVios_base@1@AAV21@@Z		; std::hex
PUBLIC	?SetImportant@PanicUtils@@SAXPAKKPBD@Z		; PanicUtils::SetImportant
PUBLIC	?Release@PanicUtils@@SAXW4Layers@1@PBD@Z	; PanicUtils::Release
PUBLIC	?RequireNonNull@PanicUtils@@SAXW4Layers@1@KPBD@Z ; PanicUtils::RequireNonNull
EXTRN	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z$0
	DD	02H
	DD	FLAT:__unwindfunclet$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z$7
	DD	02H
	DD	FLAT:__unwindfunclet$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z$1
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$1
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$1
; Function compile flags: /Ogtp
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\PanicUtils.cpp
;	COMDAT ?RequireNonNull@PanicUtils@@SAXW4Layers@1@KPBD@Z
_TEXT	SEGMENT
_reason$ = 8						; size = 4
?RequireNonNull@PanicUtils@@SAXW4Layers@1@KPBD@Z PROC	; PanicUtils::RequireNonNull, COMDAT
; _layer$ = ecx
; _value$ = edx

; 12   : void PanicUtils::RequireNonNull (Layers layer, DWORD value, const char* reason) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 13   :     if (!value) {

  00003	85 d2		 test	 edx, edx
  00005	75 08		 jne	 SHORT $LN2@RequireNon

; 14   :         PanicUtils::Release (layer, reason);

  00007	8b 55 08	 mov	 edx, DWORD PTR _reason$[ebp]
  0000a	e9 00 00 00 00	 jmp	 ?Release@PanicUtils@@SAXW4Layers@1@PBD@Z ; PanicUtils::Release
$LN2@RequireNon:

; 15   :     }
; 16   : }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?RequireNonNull@PanicUtils@@SAXW4Layers@1@KPBD@Z ENDP	; PanicUtils::RequireNonNull
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\PanicUtils.cpp
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\PanicUtils.cpp
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xstring
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\PanicUtils.cpp
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xstring
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\PanicUtils.cpp
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xstring
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\PanicUtils.cpp
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xstring
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xmemory
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xstring
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xmemory
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\PanicUtils.cpp
;	COMDAT ?Release@PanicUtils@@SAXW4Layers@1@PBD@Z
_TEXT	SEGMENT
$T4 = -244						; size = 24
$T1 = -220						; size = 4
_stream$ = -216						; size = 176
_log$ = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?Release@PanicUtils@@SAXW4Layers@1@PBD@Z PROC		; PanicUtils::Release, COMDAT
; _layer$ = ecx
; _reason$ = edx

; 18   : void PanicUtils::Release (Layers layer, const char* reason) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	8b fa		 mov	 edi, edx
  0002f	8b f1		 mov	 esi, ecx
  00031	0f 57 c0	 xorps	 xmm0, xmm0
  00034	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T1[ebp], 0

; 19   : 
; 20   :     // Changing to CONSOLE is strictly not recommended.
; 21   :     // It is possible that the message simply does not have time to be displayed.
; 22   :     Logger log(Logger::LoggerType::FILE);

  0003e	6a 01		 push	 1
  00040	8d 4d d8	 lea	 ecx, DWORD PTR _log$[ebp]
  00043	66 0f d6 45 e8	 movq	 QWORD PTR _log$[ebp+16], xmm0
  00048	0f 11 45 d8	 movups	 XMMWORD PTR _log$[ebp], xmm0
  0004c	e8 00 00 00 00	 call	 ??0Logger@@QAE@W4LoggerType@0@@Z ; Logger::Logger
  00051	68 b0 00 00 00	 push	 176			; 000000b0H
  00056	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _stream$[ebp]
  0005c	6a 00		 push	 0
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 _memset
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream

; 527  :     basic_stringstream() : _Mybase(_STD addressof(_Stringbuffer)), _Stringbuffer(ios_base::in | ios_base::out) {}

  00067	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _stream$[ebp], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
  00071	8d 4d 90	 lea	 ecx, DWORD PTR _stream$[ebp+104]
  00074	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _stream$[ebp+16], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
  0007e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
  00084	6a 00		 push	 0
  00086	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _stream$[ebp+24]
  0008c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00093	50		 push	 eax
  00094	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _stream$[ebp]
  0009a	c7 85 24 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR $T1[ebp], 1
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
  000aa	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000b1	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _stream$[ebp]
  000b7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000ba	c7 84 05 28 ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR _stream$[ebp+eax], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  000c5	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _stream$[ebp]
  000cb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ce	8d 41 98	 lea	 eax, DWORD PTR [ecx-104]
  000d1	89 84 0d 24 ff
	ff ff		 mov	 DWORD PTR _stream$[ebp+ecx-4], eax

; 34   :     explicit basic_stringbuf(ios_base::openmode _Mode) : _Seekhigh(nullptr), _Mystate(_Getstate(_Mode)), _Al() {}

  000d8	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _stream$[ebp+24]
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
  000e4	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _stream$[ebp+24], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  000ee	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _stream$[ebp+80], 0
  000f8	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _stream$[ebp+84], 0
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\PanicUtils.cpp

; 25   :     stream  << "\n"

  00102	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  00107	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  0010e	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR _stream$[ebp+16]
  00114	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00119	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0EE@KHFJPLEA@?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?5@
  0011e	8b c8		 mov	 ecx, eax
  00120	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00125	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  0012a	8b c8		 mov	 ecx, eax
  0012c	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00131	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  00136	8b c8		 mov	 ecx, eax
  00138	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0013d	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0EF@ICLOMLHH@If?5you?5see?5this?5message?3?5OTC?5ca@
  00142	8b c8		 mov	 ecx, eax
  00144	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00149	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  0014e	8b c8		 mov	 ecx, eax
  00150	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00155	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0EF@OFOAANJP@After?5information?5about?5the?5cau@
  0015a	8b c8		 mov	 ecx, eax
  0015c	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00161	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  00166	8b c8		 mov	 ecx, eax
  00168	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0016d	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  00172	8b c8		 mov	 ecx, eax
  00174	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00179	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BM@KFAEANNI@?9?9?9?9?9?9?9?9?9?9?9?5INFO?5?9?9?9?9?9?9?9?9?9?9@
  0017e	8b c8		 mov	 ecx, eax
  00180	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00185	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  0018a	8b c8		 mov	 ecx, eax
  0018c	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00191	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_07MJJPDIKC@Layer?3?5@
  00196	8b c8		 mov	 ecx, eax
  00198	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0019d	56		 push	 esi
  0019e	8b c8		 mov	 ecx, eax
  001a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
  001a6	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01LFCBOECM@?4@
  001ab	8b c8		 mov	 ecx, eax
  001ad	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  001b2	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  001b7	8b c8		 mov	 ecx, eax
  001b9	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  001be	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_08IIKACINI@Caused?3?5@
  001c3	8b c8		 mov	 ecx, eax
  001c5	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  001ca	8b d7		 mov	 edx, edi
  001cc	8b c8		 mov	 ecx, eax
  001ce	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  001d3	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01LFCBOECM@?4@
  001d8	8b c8		 mov	 ecx, eax
  001da	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  001df	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  001e4	8b c8		 mov	 ecx, eax
  001e6	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  001eb	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BN@PNBNEKLM@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
  001f0	8b c8		 mov	 ecx, eax
  001f2	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  001f7	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  001fc	8b c8		 mov	 ecx, eax
  001fe	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00203	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BD@IPMJGJLJ@Global?5variables?3?5@
  00208	8b c8		 mov	 ecx, eax
  0020a	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0020f	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  00214	8b c8		 mov	 ecx, eax
  00216	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0021b	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0DM@GOADBMDA@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
  00220	8b c8		 mov	 ecx, eax
  00222	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00227	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  0022c	8b c8		 mov	 ecx, eax
  0022e	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00233	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BD@EMEBIIFP@?$FLSEGMENT?$FN?5Module?3?5@
  00238	8b c8		 mov	 ecx, eax
  0023a	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0023f	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_02MDDDDAID@0x@
  00244	8b c8		 mov	 ecx, eax
  00246	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0024b	68 00 00 00 00	 push	 OFFSET ?uppercase@std@@YAAAVios_base@1@AAV21@@Z ; std::uppercase
  00250	8b c8		 mov	 ecx, eax
  00252	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z
  00258	68 00 00 00 00	 push	 OFFSET ?hex@std@@YAAAVios_base@1@AAV21@@Z ; std::hex
  0025d	8b c8		 mov	 ecx, eax
  0025f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z
  00265	ff 35 00 00 00
	00		 push	 DWORD PTR ?UnsafeLibraryPointer@Segment@@2KA ; Segment::UnsafeLibraryPointer
  0026b	8b c8		 mov	 ecx, eax
  0026d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@K@Z
  00273	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  00278	8b c8		 mov	 ecx, eax
  0027a	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0027f	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BH@JGFIANLP@?$FLSEGMENT?$FN?5Allocation?3?5@
  00284	8b c8		 mov	 ecx, eax
  00286	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0028b	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_02MDDDDAID@0x@
  00290	8b c8		 mov	 ecx, eax
  00292	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00297	68 00 00 00 00	 push	 OFFSET ?uppercase@std@@YAAAVios_base@1@AAV21@@Z ; std::uppercase
  0029c	8b c8		 mov	 ecx, eax
  0029e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z
  002a4	68 00 00 00 00	 push	 OFFSET ?hex@std@@YAAAVios_base@1@AAV21@@Z ; std::hex
  002a9	8b c8		 mov	 ecx, eax
  002ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z
  002b1	ff 35 00 00 00
	00		 push	 DWORD PTR ?UnsafeAllocatedPointer@Segment@@2KA ; Segment::UnsafeAllocatedPointer
  002b7	8b c8		 mov	 ecx, eax
  002b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@K@Z
  002bf	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  002c4	8b c8		 mov	 ecx, eax
  002c6	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  002cb	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0DM@GOADBMDA@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
  002d0	8b c8		 mov	 ecx, eax
  002d2	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  002d7	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  002dc	8b c8		 mov	 ecx, eax
  002de	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  002e3	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  002e8	8b c8		 mov	 ecx, eax
  002ea	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  002ef	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0FO@HCNJJPPM@Send?5this?5log?5to?5the?5developer?5@
  002f4	8b c8		 mov	 ecx, eax
  002f6	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  002fb	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  00300	8b c8		 mov	 ecx, eax
  00302	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00307	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0EE@KHFJPLEA@?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?$CB?5@
  0030c	8b c8		 mov	 ecx, eax
  0030e	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00313	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01EEMJAFIK@?6@
  00318	8b c8		 mov	 ecx, eax
  0031a	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >

; 26   :     << "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! PANIC !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" 
; 27   :     << "\n" << "\n"
; 28   :     << "If you see this message: OTC cannot find a way out of the situation." 
; 29   :     << "\n"
; 30   :     << "After information about the cause of the error, CSGO will be frozen."
; 31   :     << "\n" << "\n"
; 32   :     << "----------- INFO ----------" << "\n"
; 33   :     << "Layer: " << layer << "." << "\n"
; 34   :     << "Caused: " << reason << "." << "\n"
; 35   :     << "----------------------------" << "\n"
; 36   :     << "Global variables: " << "\n"
; 37   :     << "-----------------------------------------------------------" << "\n"
; 38   :     << "[SEGMENT] Module: " << "0x" << std::uppercase << std::hex << Segment::UnsafeLibraryPointer << "\n"
; 39   :     << "[SEGMENT] Allocation: " << "0x" << std::uppercase << std::hex << Segment::UnsafeAllocatedPointer << "\n"
; 40   :     << "-----------------------------------------------------------"
; 41   :     << "\n" << "\n"
; 42   :     << "Send this log to the developer or try connecting a debugger and find out what the problem is." << "\n"
; 43   :     << "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! PANIC !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" << "\n"
; 44   :     ;
; 45   : 
; 46   :     log.SwitchedInfo ("_Panic");

  0031f	8d 45 d8	 lea	 eax, DWORD PTR _log$[ebp]
  00322	68 00 00 00 00	 push	 OFFSET ??_C@_06MNPNKHCO@_Panic@
  00327	50		 push	 eax
  00328	e8 00 00 00 00	 call	 ?SwitchedInfo@Logger@@QAAXPBDZZ ; Logger::SwitchedInfo

; 47   :     log.SwitchedInfo ("If you see this message: OTC cannot find a way out of the situation.");

  0032d	8d 45 d8	 lea	 eax, DWORD PTR _log$[ebp]
  00330	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@ICLOMLHH@If?5you?5see?5this?5message?3?5OTC?5ca@
  00335	50		 push	 eax
  00336	e8 00 00 00 00	 call	 ?SwitchedInfo@Logger@@QAAXPBDZZ ; Logger::SwitchedInfo

; 48   :     log.SwitchedInfo ("Log may at document folder.");

  0033b	8d 45 d8	 lea	 eax, DWORD PTR _log$[ebp]
  0033e	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DKGLMJLA@Log?5may?5at?5document?5folder?4@
  00343	50		 push	 eax
  00344	e8 00 00 00 00	 call	 ?SwitchedInfo@Logger@@QAAXPBDZZ ; Logger::SwitchedInfo
  00349	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream

; 568  :         return _Stringbuffer.str();

  0034c	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 87   :         if (!(_Mystate & _Constant) && _Mysb::pptr()) { // writable, make string from write buffer

  00350	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _stream$[ebp+84]
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xstring

; 4301 :         _Mypair._Myval2._Mysize = 0;

  00356	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 4302 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00360	c7 85 20 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4303 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4304 :         // write can alias this
; 4305 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0036a	c6 85 0c ff ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream

; 95   :         return _Result;

  00371	c7 85 24 ff ff
	ff 05 00 00 00	 mov	 DWORD PTR $T1[ebp], 5
  0037b	f6 c1 02	 test	 cl, 2
  0037e	75 26		 jne	 SHORT $LN32@Release
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf

; 195  :         return *_IPnext;

  00380	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _stream$[ebp+56]
  00386	8b 10		 mov	 edx, DWORD PTR [eax]
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream

; 87   :         if (!(_Mystate & _Constant) && _Mysb::pptr()) { // writable, make string from write buffer

  00388	85 d2		 test	 edx, edx
  0038a	74 1a		 je	 SHORT $LN32@Release
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf

; 191  :         return *_IPfirst;

  0038c	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _stream$[ebp+40]
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream

; 89   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Max_value(_Mysb::pptr(), _Seekhigh) - _Base));

  00392	3b 95 78 ff ff
	ff		 cmp	 edx, DWORD PTR _stream$[ebp+80]
  00398	0f 42 95 78 ff
	ff ff		 cmovb	 edx, DWORD PTR _stream$[ebp+80]
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf

; 191  :         return *_IPfirst;

  0039f	8b 08		 mov	 ecx, DWORD PTR [eax]
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream

; 89   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Max_value(_Mysb::pptr(), _Seekhigh) - _Base));

  003a1	2b d1		 sub	 edx, ecx
  003a3	52		 push	 edx
  003a4	eb 26		 jmp	 SHORT $LN103@Release
$LN32@Release:

; 90   :         } else if (!(_Mystate & _Noread) && _Mysb::gptr()) { // readable, make string from read buffer

  003a6	f6 c1 04	 test	 cl, 4
  003a9	75 2d		 jne	 SHORT $LN34@Release
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf

; 187  :         return *_IGnext;

  003ab	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR _stream$[ebp+52]
  003b1	8b 10		 mov	 edx, DWORD PTR [eax]
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream

; 90   :         } else if (!(_Mystate & _Noread) && _Mysb::gptr()) { // readable, make string from read buffer

  003b3	85 d2		 test	 edx, edx
  003b5	74 21		 je	 SHORT $LN34@Release
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf

; 183  :         return *_IGfirst;

  003b7	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR _stream$[ebp+36]
  003bd	8b 08		 mov	 ecx, DWORD PTR [eax]
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream

; 92   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Mysb::egptr() - _Base));

  003bf	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _stream$[ebp+68]
  003c5	8b 00		 mov	 eax, DWORD PTR [eax]
  003c7	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf

; 199  :         return *_IGnext + *_IGcount;

  003c9	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream

; 92   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Mysb::egptr() - _Base));

  003cb	50		 push	 eax
$LN103@Release:
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\PanicUtils.cpp

; 49   :     log.Info (stream.str().c_str());

  003cc	51		 push	 ecx
  003cd	8d 8d 0c ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  003d3	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN34@Release:
  003d8	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xstring

; 2149 :         const value_type* _Result = _Bx._Buf;

  003df	8d 85 0c ff ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]

; 2158 :         return _BUF_SIZE <= _Myres;

  003e5	83 bd 20 ff ff
	ff 10		 cmp	 DWORD PTR $T4[ebp+20], 16 ; 00000010H

; 2150 :         if (_Large_string_engaged()) {

  003ec	0f 43 85 0c ff
	ff ff		 cmovae	 eax, DWORD PTR $T4[ebp]
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\PanicUtils.cpp

; 49   :     log.Info (stream.str().c_str());

  003f3	50		 push	 eax
  003f4	8d 45 d8	 lea	 eax, DWORD PTR _log$[ebp]
  003f7	50		 push	 eax
  003f8	e8 00 00 00 00	 call	 ?Info@Logger@@QAAXPBDZZ	; Logger::Info
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xstring

; 2158 :         return _BUF_SIZE <= _Myres;

  003fd	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T4[ebp+20]
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\PanicUtils.cpp

; 49   :     log.Info (stream.str().c_str());

  00403	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xstring

; 2158 :         return _BUF_SIZE <= _Myres;

  00406	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4310 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00409	72 31		 jb	 SHORT $LN80@Release
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xmemory

; 780  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0040b	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xstring

; 4314 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00411	42		 inc	 edx
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xmemory

; 780  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00412	8b c1		 mov	 eax, ecx

; 190  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00414	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0041a	72 16		 jb	 SHORT $LN90@Release

; 111  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0041c	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0041f	83 c2 23	 add	 edx, 35			; 00000023H
  00422	2b c1		 sub	 eax, ecx

; 112  : 
; 113  :     // If the following asserts, it likely means that we are performing
; 114  :     // an aligned delete on memory coming from an unaligned allocation.
; 115  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 116  : 
; 117  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 118  :     // in range [_Min_back_shift, _Non_user_size]
; 119  : #ifdef _DEBUG
; 120  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 121  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 122  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 123  : #endif // _DEBUG
; 124  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 125  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00424	83 c0 fc	 add	 eax, -4			; fffffffcH
  00427	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0042a	76 06		 jbe	 SHORT $LN90@Release
  0042c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN90@Release:

; 195  :     ::operator delete(_Ptr, _Bytes);

  00432	52		 push	 edx
  00433	51		 push	 ecx
  00434	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00439	83 c4 08	 add	 esp, 8
$LN80@Release:
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\PanicUtils.cpp

; 51   :     if (!Segment::UnsafeLibraryPointer) {

  0043c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?UnsafeLibraryPointer@Segment@@2KA ; Segment::UnsafeLibraryPointer
  00441	85 c0		 test	 eax, eax
  00443	75 0b		 jne	 SHORT $LN2@Release

; 52   :         //Debug to process and watch exit code for get solution!
; 53   :         ExitProcess (0xFFFA1);

  00445	68 a1 ff 0f 00	 push	 1048481			; 000fffa1H
  0044a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ExitProcess@4
$LN2@Release:

; 54   :     }
; 55   : 
; 56   :     if (!Segment::UnsafeAllocatedPointer) {

  00450	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?UnsafeAllocatedPointer@Segment@@2KA ; Segment::UnsafeAllocatedPointer
  00456	85 c9		 test	 ecx, ecx
  00458	75 08		 jne	 SHORT $LN3@Release

; 57   :         FreeLibraryAndExitThread (reinterpret_cast<HMODULE> (Segment::UnsafeLibraryPointer), NULL);

  0045a	51		 push	 ecx
  0045b	50		 push	 eax
  0045c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibraryAndExitThread@8
$LN3@Release:

; 58   :     }
; 59   : 
; 60   :     VirtualFree (reinterpret_cast<LPVOID> (Segment::UnsafeAllocatedPointer), NULL, MEM_RELEASE);

  00462	68 00 80 00 00	 push	 32768			; 00008000H
  00467	6a 00		 push	 0
  00469	51		 push	 ecx
  0046a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VirtualFree@12

; 61   :     //Froze for read log.
; 62   :     ExitThread (0);

  00470	6a 00		 push	 0
  00472	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ExitThread@4
$LN102@Release:
  00478	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z$2:
  00000	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00006	83 e0 01	 and	 eax, 1
  00009	0f 84 10 00 00
	00		 je	 $LN15@Release
  0000f	83 a5 24 ff ff
	ff fe		 and	 DWORD PTR $T1[ebp], -2	; fffffffeH
  00016	8d 4d 90	 lea	 ecx, DWORD PTR _stream$[ebp+104]
  00019	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
$LN15@Release:
  0001f	c3		 ret	 0
__unwindfunclet$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z$3:
  00020	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR _stream$[ebp+32]
  00026	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
__unwindfunclet$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z$0:
  0002c	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _stream$[ebp]
  00032	e9 00 00 00 00	 jmp	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z$7:
  00037	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  0003d	83 e0 04	 and	 eax, 4
  00040	0f 84 12 00 00
	00		 je	 $LN37@Release
  00046	83 a5 24 ff ff
	ff fb		 and	 DWORD PTR $T1[ebp], -5	; fffffffbH
  0004d	8d 8d 0c ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00053	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN37@Release:
  00058	c3		 ret	 0
__unwindfunclet$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z$1:
  00059	8d 8d 0c ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0005f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00064	cc		 int	 3
  00065	cc		 int	 3
  00066	cc		 int	 3
  00067	cc		 int	 3
  00068	cc		 int	 3
__ehhandler$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z:
  00069	90		 npad	 1
  0006a	90		 npad	 1
  0006b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0006f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00072	8b 8a 0c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-244]
  00078	33 c8		 xor	 ecx, eax
  0007a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00082	33 c8		 xor	 ecx, eax
  00084	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00089	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Release@PanicUtils@@SAXW4Layers@1@PBD@Z
  0008e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Release@PanicUtils@@SAXW4Layers@1@PBD@Z ENDP		; PanicUtils::Release
; Function compile flags: /Ogtp
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\PanicUtils.cpp
;	COMDAT ?SetImportant@PanicUtils@@SAXPAKKPBD@Z
_TEXT	SEGMENT
_reason$dead$ = 8					; size = 4
?SetImportant@PanicUtils@@SAXPAKKPBD@Z PROC		; PanicUtils::SetImportant, COMDAT
; _variable$ = ecx
; _value$ = edx

; 4    :     if (variable && value) {

  00000	85 c9		 test	 ecx, ecx
  00002	74 07		 je	 SHORT $LN2@SetImporta
  00004	85 d2		 test	 edx, edx
  00006	74 03		 je	 SHORT $LN2@SetImporta

; 5    :         *variable = value;

  00008	89 11		 mov	 DWORD PTR [ecx], edx

; 9    :     }
; 10   : }

  0000a	c3		 ret	 0
$LN2@SetImporta:

; 6    :     }
; 7    :     else {
; 8    :         PanicUtils::Release (Layers::ROUTINE, reason);

  0000b	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BL@CHOBNDMJ@Variable?5or?5value?5is?5null?4@
  00010	b9 01 00 00 00	 mov	 ecx, 1
  00015	e9 00 00 00 00	 jmp	 ?Release@PanicUtils@@SAXW4Layers@1@PBD@Z ; PanicUtils::Release
?SetImportant@PanicUtils@@SAXPAKKPBD@Z ENDP		; PanicUtils::SetImportant
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\ios
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xiosbase
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\ios
;	COMDAT ?hex@std@@YAAAVios_base@1@AAV21@@Z
_TEXT	SEGMENT
__Iosbase$ = 8						; size = 4
?hex@std@@YAAAVios_base@1@AAV21@@Z PROC			; std::hex, COMDAT

; 206  : inline ios_base& __CLRCALL_OR_CDECL hex(ios_base& _Iosbase) { // set basefield to hex

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xiosbase

; 347  :         const ios_base::fmtflags _Oldfmtflags = _Fmtfl;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Iosbase$[ebp]

; 348  :         _Fmtfl                                = (_Oldfmtflags & ~_Mask) | (_Newfmtflags & _Mask & _Fmtmask);

  00006	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00009	81 e1 ff f9 ff
	ff		 and	 ecx, -1537		; fffff9ffH
  0000f	81 c9 00 08 00
	00		 or	 ecx, 2048		; 00000800H
  00015	89 48 14	 mov	 DWORD PTR [eax+20], ecx
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\ios

; 209  : }

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?hex@std@@YAAAVios_base@1@AAV21@@Z ENDP			; std::hex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\ios
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xiosbase
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\ios
;	COMDAT ?uppercase@std@@YAAAVios_base@1@AAV21@@Z
_TEXT	SEGMENT
__Iosbase$ = 8						; size = 4
?uppercase@std@@YAAAVios_base@1@AAV21@@Z PROC		; std::uppercase, COMDAT

; 301  : inline ios_base& __CLRCALL_OR_CDECL uppercase(ios_base& _Iosbase) { // set uppercase

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xiosbase

; 341  :         _Fmtfl |= _Newfmtflags & _Fmtmask;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Iosbase$[ebp]
  00006	83 48 14 04	 or	 DWORD PTR [eax+20], 4
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\ios

; 304  : }

  0000a	5d		 pop	 ebp
  0000b	c3		 ret	 0
?uppercase@std@@YAAAVios_base@1@AAV21@@Z ENDP		; std::uppercase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\headers\runtime\Logger.h
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\Utils.cpp
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\headers\runtime\Logger.h
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\Utils.cpp
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\headers\runtime\Logger.h
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\runtime\Logger.cpp
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\headers\runtime\Logger.h
;	COMDAT ??0Logger@@QAE@W4LoggerType@0@@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
??0Logger@@QAE@W4LoggerType@0@@Z PROC			; Logger::Logger, COMDAT
; _this$ = ecx

; 25   : 	Logger (LoggerType type) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\Utils.cpp

; 5    :    HMODULE hModule = GetModuleHandleA (module);

  00005	68 00 00 00 00	 push	 OFFSET ??_C@_09LGKBAKDK@tier0?4dll@
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\headers\runtime\Logger.h

; 25   : 	Logger (LoggerType type) {

  0000a	8b f1		 mov	 esi, ecx
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\Utils.cpp

; 5    :    HMODULE hModule = GetModuleHandleA (module);

  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4

; 6    : 
; 7    :    if (!hModule) {

  00012	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__LoadLibraryA@4
  00018	85 c0		 test	 eax, eax
  0001a	75 07		 jne	 SHORT $LN11@Logger

; 8    :        hModule = LoadLibraryA (module);

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_09LGKBAKDK@tier0?4dll@
  00021	ff d7		 call	 edi
$LN11@Logger:

; 24   :    return reinterpret_cast<DWORD> (GetProcAddress(GetModule(module), function));

  00023	68 00 00 00 00	 push	 OFFSET ??_C@_03MLMOILGK@Msg@
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8

; 5    :    HMODULE hModule = GetModuleHandleA (module);

  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EMPDFJNI@engine?4dll@
  00034	89 06		 mov	 DWORD PTR [esi], eax
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4

; 6    : 
; 7    :    if (!hModule) {

  0003c	85 c0		 test	 eax, eax
  0003e	75 07		 jne	 SHORT $LN16@Logger

; 8    :        hModule = LoadLibraryA (module);

  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EMPDFJNI@engine?4dll@
  00045	ff d7		 call	 edi
$LN16@Logger:

; 24   :    return reinterpret_cast<DWORD> (GetProcAddress(GetModule(module), function));

  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OBHPCBFP@CreateInterface@
  0004c	50		 push	 eax
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00053	6a 00		 push	 0
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@CJDLPJJP@VEngineClient014@
  0005a	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0005d	ff d0		 call	 eax
  0005f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00062	83 c4 08	 add	 esp, 8
  00065	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00068	8b 00		 mov	 eax, DWORD PTR [eax]
  0006a	8b 90 b0 01 00
	00		 mov	 edx, DWORD PTR [eax+432]
  00070	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  00073	74 11		 je	 SHORT $LN6@Logger
  00075	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  00079	74 0b		 je	 SHORT $LN6@Logger
  0007b	85 d2		 test	 edx, edx
  0007d	74 07		 je	 SHORT $LN6@Logger
  0007f	b8 01 00 00 00	 mov	 eax, 1
  00084	eb 02		 jmp	 SHORT $LN7@Logger
$LN6@Logger:
  00086	33 c0		 xor	 eax, eax
$LN7@Logger:
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\headers\runtime\Logger.h

; 26   : 		if (type == LoggerType::CONSOLE) Setup ();

  00088	8b 7d 08	 mov	 edi, DWORD PTR _type$[ebp]
  0008b	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0008e	85 ff		 test	 edi, edi
  00090	75 21		 jne	 SHORT $LN23@Logger
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\runtime\Logger.cpp

; 8    : 	if (m_Type == CONSOLE) {

  00092	39 7e 14	 cmp	 DWORD PTR [esi+20], edi
  00095	75 1c		 jne	 SHORT $LN23@Logger

; 9    : 		if (!m_Game.m_IsInterfacesAvailable) PanicUtils::Release (PanicUtils::Layers::INIT, "GameInterfaces is null. Can't initialize the logger.");

  00097	85 c0		 test	 eax, eax
  00099	75 0f		 jne	 SHORT $LN20@Logger
  0009b	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0DF@OFKJIDHJ@GameInterfaces?5is?5null?4?5Can?8t?5i@
  000a0	33 c9		 xor	 ecx, ecx
  000a2	e8 00 00 00 00	 call	 ?Release@PanicUtils@@SAXW4Layers@1@PBD@Z ; PanicUtils::Release
  000a7	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
$LN20@Logger:

; 10   : 		m_Game.AtConsoleInterface () (NULL, "showconsole; log_color General 0xFFFFFFFF; clear");

  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@MJIOIOJA@showconsole?$DL?5log_color?5General?5@
  000af	33 c9		 xor	 ecx, ecx
  000b1	ff d2		 call	 edx
$LN23@Logger:
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\headers\runtime\Logger.h

; 28   : 	}

  000b3	89 7e 14	 mov	 DWORD PTR [esi+20], edi
  000b6	8b c6		 mov	 eax, esi
  000b8	5f		 pop	 edi
  000b9	5e		 pop	 esi
  000ba	5d		 pop	 ebp
  000bb	c2 04 00	 ret	 4
??0Logger@@QAE@W4LoggerType@0@@Z ENDP			; Logger::Logger
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\Neonik\Desktop\CSGO Cheat Sources\OTC-Source\otc\cpp\utils\Utils.cpp
;	COMDAT ??0GameFramework@@QAE@XZ
_TEXT	SEGMENT
??0GameFramework@@QAE@XZ PROC				; GameFramework::GameFramework, COMDAT
; _this$ = ecx

; 5    :    HMODULE hModule = GetModuleHandleA (module);

  00000	56		 push	 esi
  00001	68 00 00 00 00	 push	 OFFSET ??_C@_09LGKBAKDK@tier0?4dll@
  00006	8b f1		 mov	 esi, ecx
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4

; 6    : 
; 7    :    if (!hModule) {

  0000e	85 c0		 test	 eax, eax
  00010	75 0b		 jne	 SHORT $LN8@GameFramew

; 8    :        hModule = LoadLibraryA (module);

  00012	68 00 00 00 00	 push	 OFFSET ??_C@_09LGKBAKDK@tier0?4dll@
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4
$LN8@GameFramew:

; 24   :    return reinterpret_cast<DWORD> (GetProcAddress(GetModule(module), function));

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MLMOILGK@Msg@
  00022	50		 push	 eax
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8

; 5    :    HMODULE hModule = GetModuleHandleA (module);

  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EMPDFJNI@engine?4dll@
  0002e	89 06		 mov	 DWORD PTR [esi], eax
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4

; 6    : 
; 7    :    if (!hModule) {

  00036	85 c0		 test	 eax, eax
  00038	75 0b		 jne	 SHORT $LN13@GameFramew

; 8    :        hModule = LoadLibraryA (module);

  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EMPDFJNI@engine?4dll@
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4
$LN13@GameFramew:

; 24   :    return reinterpret_cast<DWORD> (GetProcAddress(GetModule(module), function));

  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OBHPCBFP@CreateInterface@
  0004a	50		 push	 eax
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00051	6a 00		 push	 0
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@CJDLPJJP@VEngineClient014@
  00058	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0005b	ff d0		 call	 eax
  0005d	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00060	83 c4 08	 add	 esp, 8
  00063	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00066	8b 00		 mov	 eax, DWORD PTR [eax]
  00068	8b 80 b0 01 00
	00		 mov	 eax, DWORD PTR [eax+432]
  0006e	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00071	74 15		 je	 SHORT $LN3@GameFramew
  00073	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  00077	74 0f		 je	 SHORT $LN3@GameFramew
  00079	85 c0		 test	 eax, eax
  0007b	74 0b		 je	 SHORT $LN3@GameFramew
  0007d	c7 46 10 01 00
	00 00		 mov	 DWORD PTR [esi+16], 1
  00084	8b c6		 mov	 eax, esi
  00086	5e		 pop	 esi
  00087	c3		 ret	 0
$LN3@GameFramew:
  00088	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0008f	8b c6		 mov	 eax, esi
  00091	5e		 pop	 esi
  00092	c3		 ret	 0
??0GameFramework@@QAE@XZ ENDP				; GameFramework::GameFramework
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?__autoclassinit2@Logger@@QAEXI@Z
_TEXT	SEGMENT
_classSize$dead$ = 8					; size = 4
?__autoclassinit2@Logger@@QAEXI@Z PROC			; Logger::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	0f 57 c0	 xorps	 xmm0, xmm0
  00003	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  00006	66 0f d6 41 10	 movq	 QWORD PTR [ecx+16], xmm0
  0000b	c2 04 00	 ret	 4
?__autoclassinit2@Logger@@QAEXI@Z ENDP			; Logger::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
;	COMDAT ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
; _this$ = ecx

; 561  :     virtual ~basic_stringstream() noexcept {}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	56		 push	 esi
  00003	8d 71 68	 lea	 esi, DWORD PTR [ecx+104]
  00006	8d 4e b0	 lea	 ecx, DWORD PTR [esi-80]
  00009	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000c	c7 44 30 98 00
	00 00 00	 mov	 DWORD PTR [eax+esi-104], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  00014	8b 46 98	 mov	 eax, DWORD PTR [esi-104]
  00017	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0001a	8d 42 98	 lea	 eax, DWORD PTR [edx-104]
  0001d	89 44 32 94	 mov	 DWORD PTR [edx+esi-108], eax
  00021	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  00026	8d 4e b8	 lea	 ecx, DWORD PTR [esi-72]
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
  0002f	8b ce		 mov	 ecx, esi
  00031	5e		 pop	 esi
  00032	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_classSize$dead$ = 8					; size = 4
?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	68 b0 00 00 00	 push	 176			; 000000b0H
  00005	6a 00		 push	 0
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 _memset
  0000d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00010	c2 04 00	 ret	 4
?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xstring
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\utility
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
;	COMDAT ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -20				; size = 4
$T1 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx

; 567  :     _NODISCARD _Mystr str() const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx
  0002a	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  0002d	89 75 ec	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
  00030	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0

; 568  :         return _Stringbuffer.str();

  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\xstring

; 4301 :         _Mypair._Myval2._Mysize = 0;

  0003e	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4302 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00045	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4303 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4304 :         // write can alias this
; 4305 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004c	c6 06 00	 mov	 BYTE PTR [esi], 0
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream

; 87   :         if (!(_Mystate & _Constant) && _Mysb::pptr()) { // writable, make string from write buffer

  0004f	8b 4f 54	 mov	 ecx, DWORD PTR [edi+84]

; 93   :         }
; 94   : 
; 95   :         return _Result;

  00052	c7 45 f0 02 00
	00 00		 mov	 DWORD PTR $T1[ebp], 2
  00059	f6 c1 02	 test	 cl, 2
  0005c	75 1b		 jne	 SHORT $LN6@str
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf

; 195  :         return *_IPnext;

  0005e	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream

; 87   :         if (!(_Mystate & _Constant) && _Mysb::pptr()) { // writable, make string from write buffer

  00061	8b 18		 mov	 ebx, DWORD PTR [eax]
  00063	85 db		 test	 ebx, ebx
  00065	74 12		 je	 SHORT $LN6@str
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf

; 191  :         return *_IPfirst;

  00067	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\utility

; 37   :     return _Left < _Right ? _Right : _Left;

  0006a	3b 5f 50	 cmp	 ebx, DWORD PTR [edi+80]
  0006d	0f 42 5f 50	 cmovb	 ebx, DWORD PTR [edi+80]
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf

; 191  :         return *_IPfirst;

  00071	8b 10		 mov	 edx, DWORD PTR [eax]
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream

; 89   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Max_value(_Mysb::pptr(), _Seekhigh) - _Base));

  00073	2b da		 sub	 ebx, edx
  00075	53		 push	 ebx
  00076	52		 push	 edx
  00077	eb 1e		 jmp	 SHORT $LN38@str
$LN6@str:

; 90   :         } else if (!(_Mystate & _Noread) && _Mysb::gptr()) { // readable, make string from read buffer

  00079	f6 c1 04	 test	 cl, 4
  0007c	75 20		 jne	 SHORT $LN35@str
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf

; 187  :         return *_IGnext;

  0007e	8b 47 34	 mov	 eax, DWORD PTR [edi+52]
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream

; 90   :         } else if (!(_Mystate & _Noread) && _Mysb::gptr()) { // readable, make string from read buffer

  00081	8b 10		 mov	 edx, DWORD PTR [eax]
  00083	85 d2		 test	 edx, edx
  00085	74 17		 je	 SHORT $LN35@str
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\streambuf

; 183  :         return *_IGfirst;

  00087	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  0008a	8b 08		 mov	 ecx, DWORD PTR [eax]

; 199  :         return *_IGnext + *_IGcount;

  0008c	8b 47 44	 mov	 eax, DWORD PTR [edi+68]
  0008f	8b 00		 mov	 eax, DWORD PTR [eax]
  00091	2b c1		 sub	 eax, ecx
  00093	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream

; 92   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Mysb::egptr() - _Base));

  00095	50		 push	 eax
  00096	51		 push	 ecx
$LN38@str:

; 569  :     }

  00097	8b ce		 mov	 ecx, esi
  00099	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN35@str:
  0009e	8b c6		 mov	 eax, esi
  000a0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000aa	59		 pop	 ecx
  000ab	5f		 pop	 edi
  000ac	5e		 pop	 esi
  000ad	5b		 pop	 ebx
  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$1:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T1[ebp]
  00003	83 e0 02	 and	 eax, 2
  00006	0f 84 0c 00 00
	00		 je	 $LN11@str
  0000c	83 65 f0 fd	 and	 DWORD PTR $T1[ebp], -3	; fffffffdH
  00010	8b 4d ec	 mov	 ecx, DWORD PTR ___$ReturnUdt$GSCopy$[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@str:
  00018	c3		 ret	 0
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
__ehhandler$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ:
  0001e	90		 npad	 1
  0001f	90		 npad	 1
  00020	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00024	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00027	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
;	COMDAT ??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 561  :     virtual ~basic_stringstream() noexcept {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 98	 mov	 eax, DWORD PTR [esi-104]
  00006	8d 4e b0	 lea	 ecx, DWORD PTR [esi-80]
  00009	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000c	c7 44 30 98 00
	00 00 00	 mov	 DWORD PTR [eax+esi-104], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  00014	8b 46 98	 mov	 eax, DWORD PTR [esi-104]
  00017	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0001a	8d 42 98	 lea	 eax, DWORD PTR [edx-104]
  0001d	89 44 32 94	 mov	 DWORD PTR [edx+esi-108], eax
  00021	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  00026	8d 4e b8	 lea	 ecx, DWORD PTR [esi-72]
  00029	5e		 pop	 esi
  0002a	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
;	COMDAT ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T1 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_$initVBases$dead$ = 8					; size = 4
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 527  :     basic_stringstream() : _Mybase(_STD addressof(_Stringbuffer)), _Stringbuffer(ios_base::in | ios_base::out) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f9		 mov	 edi, ecx
  00029	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
  0002c	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
  00033	8d 4f 68	 lea	 ecx, DWORD PTR [edi+104]
  00036	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
  0003c	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
  00049	6a 00		 push	 0
  0004b	8d 77 18	 lea	 esi, DWORD PTR [edi+24]
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00055	56		 push	 esi
  00056	8b cf		 mov	 ecx, edi
  00058	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T1[ebp], 1
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
  00065	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0006c	8b 07		 mov	 eax, DWORD PTR [edi]
  0006e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00071	c7 04 07 00 00
	00 00		 mov	 DWORD PTR [edi+eax], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  00078	8b 07		 mov	 eax, DWORD PTR [edi]
  0007a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007d	8d 41 98	 lea	 eax, DWORD PTR [ecx-104]
  00080	89 44 39 fc	 mov	 DWORD PTR [ecx+edi-4], eax

; 34   :     explicit basic_stringbuf(ios_base::openmode _Mode) : _Seekhigh(nullptr), _Mystate(_Getstate(_Mode)), _Al() {}

  00084	8b ce		 mov	 ecx, esi
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
  0008c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@

; 527  :     basic_stringstream() : _Mybase(_STD addressof(_Stringbuffer)), _Stringbuffer(ios_base::in | ios_base::out) {}

  00092	8b c7		 mov	 eax, edi

; 34   :     explicit basic_stringbuf(ios_base::openmode _Mode) : _Seekhigh(nullptr), _Mystate(_Getstate(_Mode)), _Al() {}

  00094	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0
  0009b	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0

; 527  :     basic_stringstream() : _Mybase(_STD addressof(_Stringbuffer)), _Stringbuffer(ios_base::in | ios_base::out) {}

  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T1[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 10 00 00
	00		 je	 $LN5@basic_stri
  0000c	83 65 f0 fe	 and	 DWORD PTR $T1[ebp], -2	; fffffffeH
  00010	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 68	 add	 ecx, 104		; 00000068H
  00016	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
$LN5@basic_stri:
  0001c	c3		 ret	 0
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$1:
  0001d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	83 c1 20	 add	 ecx, 32			; 00000020H
  00023	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
  00029	cc		 int	 3
  0002a	cc		 int	 3
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
__ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
  0002e	90		 npad	 1
  0002f	90		 npad	 1
  00030	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00034	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00037	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0003a	33 c8		 xor	 ecx, eax
  0003c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00041	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00046	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Visual Studio IDE\VC\Tools\MSVC\14.26.28801\include\sstream
;	COMDAT ??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 561  :     virtual ~basic_stringstream() noexcept {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8b 46 98	 mov	 eax, DWORD PTR [esi-104]
  00009	57		 push	 edi
  0000a	8d 7e 98	 lea	 edi, DWORD PTR [esi-104]
  0000d	8d 4e b0	 lea	 ecx, DWORD PTR [esi-80]
  00010	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00013	c7 44 30 98 00
	00 00 00	 mov	 DWORD PTR [eax+esi-104], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  0001b	8b 07		 mov	 eax, DWORD PTR [edi]
  0001d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00020	8d 42 98	 lea	 eax, DWORD PTR [edx-104]
  00023	89 44 32 94	 mov	 DWORD PTR [edx+esi-108], eax
  00027	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  0002c	8d 4e b8	 lea	 ecx, DWORD PTR [esi-72]
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
  00035	8b ce		 mov	 ecx, esi
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
  0003d	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00041	74 0e		 je	 SHORT $LN9@scalar
  00043	68 b0 00 00 00	 push	 176			; 000000b0H
  00048	57		 push	 edi
  00049	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0004e	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00051	8b c7		 mov	 eax, edi
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	e9 00 00 00 00	 jmp	 ??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
END
